@import "../../phytoplankton-core/base/variables";
@import "../../phytoplankton-core/base/colors";
@import "../../phytoplankton-core/base/mixins";

/*

# Handlebars.js

> Minimal templating on steroids.

[Handlebars.js](http://handlebarsjs.com/) is bundled with Phytoplankton.

# Templates

Templates are placed in `templates/hbs/`.

# Context

Context objects are placed in `js/hbs/context.js`.

# Helpers

Helpers are placed in `js/hbs/helpers.js`.

# Example usage

Wrap your code with
[fenced code blocks](https://help.github.com/articles/github-flavored-markdown#fenced-code-blocks) `` ``` `` +
`hbs`, like this:

	```hbs
	{ "template": "hello", "context": "filtertabs" }
	```

Basically what you're doing is passing a **JSON Object** with 2 properties:

* `template`: The name of the template (placed in `templates/hbs/`).
* `context`: The template context object (placed in `js/hbs/context.js`).

Here's how `context.js` looks like.

<pre data-src="js/hbs/context.js"></pre>

If you need to use **Handlebars helpers** you can place them in `js/hbs/helpers`.

<pre data-src="js/hbs/helpers.js"></pre>

Phytoplankton will automatically render the code as both HTML and the code blocks (uncompiled and compiled Handlebars) with syntax highlighting.

```hbs
{ "template": "hello", "context": "filtertabs" }
```

*/