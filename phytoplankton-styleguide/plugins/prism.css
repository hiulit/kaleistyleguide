/*
# Prism.js

> Lightweight, robust, elegant syntax highlighting.

[Prism](http://prismjs.com/) is bundled with Phytoplankton.

It comes with:

* Development & minified versions
* Core
* Theme
	* Okaidia *(modified version)*
* Languages
	* All
* Plugins
	* [Line Numbers](http://prismjs.com/plugins/line-numbers/)
	* [Autolinker](http://prismjs.com/plugins/autolinker/)
	* [WebPlatform Docs](http://prismjs.com/plugins/wpd/)
	* [File Highlight](http://prismjs.com/plugins/file-highlight/)

But you can use any theme or add any plugin you want.

Just go to the [Prism's download page](http://prismjs.com/download.html) and customize it
to suit yourself.

Then go to `phytoplankton-core/scripts/libs/prism` and override `prism.js` (if using the development version) or `prism.min.js` (if using the minified version).

*See more info about adding or removing themes on the **Caution!** section at the bottom.*

*/

/*
# Example Usage

It's pretty simple.

Wrap your code with
[fenced code blocks](https://help.github.com/articles/github-flavored-markdown#fenced-code-blocks) `` ``` `` +
`language code`, like this:

	```markup
	<section>
		<h1>Heading</h1>
		<p>Bunch of awesome content</p>
	</section>
	```

Phytoplankton will automatically render the code as both HTML and the code block with syntax highlighting.

```markup
<section>
	<h1>Heading</h1>
	<p>Bunch of awesome content</p>
</section>
```

*/

/*
# More languages

Prism comes with a bunch of languages, such as:

* Markup (HTML) - *This is the only language that will render something.*
* CSS
* SCSS
* JavaScript
* Handlebars
* PHP
* Python
* Ruby

...and many more.

Just add the language after the `` ``` `` and you're good to go.

## Markup (HTML)

```markup
<section>
	<h1>Heading</h1>
	<p>Bunch of awesome content</p>
</section>
```

## CSS (or SCSS)

```scss
@mixin silly-links {
	a {
		color: blue;
		background-color: red;
	}
}

@include silly-links;
```

## JavaScript (or jQuery)

```javascript
function showValues() {
	var str = $( "form" ).serialize();
	$( "#results" ).text( str );
}
$( "input[type='checkbox'], input[type='radio']" ).on( "click", showValues );
$( "select" ).on( "change", showValues );
showValues();
```

Take a look at the [Prism's download page](http://prismjs.com/download.html)
for the full list of languages.

*As mentioned before, Prism comes with all the languages in the list.*

*/

/*
# Plugins

Prism comes with:

* [Line Numbers](http://prismjs.com/plugins/line-numbers/)
* [Autolinker](http://prismjs.com/plugins/autolinker/)
* [WebPlatform Docs](http://prismjs.com/plugins/wpd/)
* [File Highlight](http://prismjs.com/plugins/file-highlight/)
* [Show Language](http://prismjs.com/plugins/show-language/)

## Line Numbers

It adds line number at the beginning of code lines.

It will only add the numbers when using [fenced code blocks](https://help.github.com/articles/github-flavored-markdown#fenced-code-blocks) `` ``` `` +
`language code`. Not when using inline code.

## Autolinker

URLs and emails will be linked automatically.

```javascript
underscore: 'libs/underscore/underscore-min', // https://github.com/amdjs
backbone: 'libs/backbone/backbone-min', // https://github.com/amdjs
```

## WebPlatform Docs

Makes tokens link to [WebPlatform.org documentation](http://docs.webplatform.org/).

*Tip: Hover over the CSS properties.*

```css
div {
	width: 150px;
	height: 150px;
	margin: 1rem;
	float: left;
}

p {
	padding: 2rem;
}
```

## File Highlight

Use the `data-src` attribute on an empty `<pre>` element, like so:

	<pre data-src="phytoplankton-core/scripts/main.js"></pre>

This renders Phytoplankton's `phytoplankton-core/main.js`.

<pre data-src="phytoplankton-core/scripts/main.js"></pre>

It also can render HTML.

This is Phytoplankton's `index.html`.

<pre data-src="index.html"></pre>

And if something goes wrong...

<pre data-src="wtf.html"></pre>

*/

/*
# Caution! ⚠️

Phytoplankton is bundled with a modified version of Prism due to **plugins** added to it.

The modifications are mostly just comments to clarify stuff but some are **features** added on it.

If you want to add/remove some of Prism's plugins or change the highlighting syntax theme, look for...

	// This is a "feature" that doesn't
	// come with the default plugin.

... before touching anything.

*/
